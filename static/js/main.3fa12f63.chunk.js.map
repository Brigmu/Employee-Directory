{"version":3,"sources":["Components/EmployeeImg/EmployeeImg.js","Components/ContentBoxRows/ContentBoxRows.js","Components/EmployeeContentBox/EmployeeContentBox.js","Components/Wrapper/Wrapper.js","Components/filterinput/FilterInput.js","Components/employeeListItem/EmployeeListItem.js","Components/employeeList/EmloyeeList.js","Components/FiltersWrapper/FiltersWrapper.js","Components/pagecontainer/pagecontainer.js","App.js","serviceWorker.js","index.js"],"names":["EmployeeImg","props","imageSrc","src","alt","className","ContentBoxRow1","employeeInfo","id","name","position","ContentBoxRow2","startDate","salary","department","EmployeeContentBox","Wrapper","class","singleEmployee","img","FilterInput","type","placeholder","onChange","handleChange","EmployeeListItem","data-id","key","onClick","handleClick","employee","EmployeeList","employees","map","item","FiltersWrapper","handleName","handlePosition","PageContainer","useState","nameFilter","setNameFilter","positionFilter","setPositionFilter","employeesArr","setEmployees","setEmployeeInfo","useEffect","undefined","nameRegex","RegExp","toLowerCase","positionRegex","filteredEmployees","filter","test","e","target","value","event","parseInt","getAttribute","index","i","length","console","log","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"qbAWeA,G,kBARK,SAACC,GACjB,IAAIC,EAAU,GAEd,OADYA,EAAZD,EAAME,IAAiBF,EAAME,IAAiB,4EAE1C,yBAAKC,IAAM,WAAWC,UAAU,eAAeF,IAAKD,MCJ/CI,G,YAAiB,SAACL,GAC3B,OACI,yBAAKI,UAAU,OACX,yBAAKA,UAAU,QACX,mCACA,2BAAIJ,EAAMM,aAAaC,KAE3B,yBAAKH,UAAU,QACX,qCACA,2BAAIJ,EAAMM,aAAaE,OAE3B,yBAAKJ,UAAU,QACX,yCACA,2BAAIJ,EAAMM,aAAaG,cAQ1BC,EAAiB,SAACV,GAC3B,OACI,yBAAKI,UAAU,OACX,yBAAKA,UAAU,QACX,2CACA,2BAAIJ,EAAMM,aAAaK,YAE3B,yBAAKP,UAAU,QACX,uCACA,2BAAIJ,EAAMM,aAAaM,SAE3B,yBAAKR,UAAU,QACX,2CACA,2BAAIJ,EAAMM,aAAaO,eCvBxBC,EATY,SAACd,GACxB,OACI,yBAAKI,UAAU,eACX,kBAAC,EAAD,CAAgBE,aAAgBN,EAAMM,eACtC,kBAAC,EAAD,CAAgBA,aAAgBN,EAAMM,iBCKnCS,EATC,SAACf,GACb,OACI,yBAAKI,UAAYJ,EAAMgB,OACnB,kBAAC,EAAD,CAAoBV,aAAgBN,EAAMiB,iBAC1C,kBAAC,EAAD,CAAaf,IAAKF,EAAMiB,eAAeC,QCApCC,G,YANK,SAACnB,GACjB,OACI,2BAAOoB,KAAK,OAAOC,YAAerB,EAAMqB,YAAajB,UAAU,eAAekB,SAAUtB,EAAMuB,iBCOvFC,G,YATU,SAACxB,GACtB,OACI,wBAAIyB,UAAWzB,EAAMO,GAAIH,UAAY,WAAWsB,IAAK1B,EAAMO,GAAIoB,QAAS3B,EAAM4B,aAC1E,uBAAGH,UAAWzB,EAAMO,IAApB,SAA+BP,EAAM6B,SAASrB,MAC9C,uBAAGiB,UAAWzB,EAAMO,IAApB,aAAmCP,EAAM6B,SAASpB,aCQ/CqB,EAXM,SAAC9B,GAElB,OACI,wBAAII,UAAY,iBACXJ,EAAM+B,UAAUC,KAAI,SAAAC,GAAI,OACrB,kBAAC,EAAD,CAAkB1B,GAAI0B,EAAK1B,GAAIsB,SAAUI,EAAML,YAAa5B,EAAM4B,mBCOnEM,EAXQ,SAAClC,GACpB,OACI,yBAAKI,UAAY,mBACb,4EACA,kBAAC,EAAD,CAAaiB,YAAY,aAAaE,aAAcvB,EAAMmC,aAC1D,kBAAC,EAAD,CAAad,YAAY,iBAAiBE,aAAcvB,EAAMoC,iBAC9D,kBAAC,EAAD,CAAcL,UAAW/B,EAAM+B,UAAWH,YAAa5B,EAAM4B,gBC0D1DS,EAhEO,SAACrC,GAAW,IAAD,EACOsC,qBADP,mBACtBC,EADsB,KACVC,EADU,OAEeF,qBAFf,mBAEtBG,EAFsB,KAENC,EAFM,OAGKJ,mBAAS,YAAItC,EAAM2C,eAHxB,mBAGtBZ,EAHsB,KAGXa,EAHW,OAIWN,mBAAS,CACjD/B,GAAI,GACJC,KAAM,GACNC,SAAU,GACVE,UAAW,GACXC,OAAQ,GACRM,IAAK,GACLL,WAAY,KAXiB,mBAItBP,EAJsB,KAIRuC,EAJQ,KAgB7BC,qBAAU,WACN,QAAkBC,IAAfR,QAA+CQ,IAAnBN,EAA6B,CACxD,IAAMO,EAAY,IAAIC,OAAOV,EAAWW,eAClCC,EAAgB,IAAIF,OAAOR,EAAeS,eAI5CE,EAHcpD,EAAM2C,aAAaU,QAAO,SAAAxB,GACxC,OAAOmB,EAAUM,KAAKzB,EAASrB,KAAK0C,kBAEJG,QAAO,SAAAxB,GACvC,OAAOsB,EAAcG,KAAKzB,EAASpB,SAASyC,kBAEhDN,EAAaQ,QAEV,QAAmBL,IAAfR,EAA0B,CACjC,IAAMS,EAAY,IAAIC,OAAOV,EAAWW,eACpCE,EAAoBpD,EAAM2C,aAAaU,QAAO,SAAAxB,GAC9C,OAAOmB,EAAUM,KAAKzB,EAASrB,KAAK0C,kBAExCN,EAAaQ,QACT,QAAuBL,IAAnBN,EAA8B,CACtC,IAAMU,EAAgB,IAAIF,OAAOR,EAAeS,eAC5CE,EAAoBpD,EAAM2C,aAAaU,QAAO,SAAAxB,GAC9C,OAAOsB,EAAcG,KAAKzB,EAASpB,SAASyC,kBAEhDN,EAAaQ,MAEnB,CAACb,EAAYE,IAef,OACI,yBAAKrC,UAAU,aACX,kBAAC,EAAD,CAAgB2B,UAAYA,EAAWI,WAAY,SAAAoB,GAAC,OAAIf,EAAce,EAAEC,OAAOC,QAAQrB,eAAgB,SAAAmB,GAAC,OAAIb,EAAkBa,EAAEC,OAAOC,QAAQ7B,YAf/H,SAAC8B,GAGrB,IAFA,IAAMnD,EAAKoD,SAASD,EAAMF,OAAOI,aAAa,YAC1CC,EAAQ,EACJC,EAAI,EAAGA,EAAI9D,EAAM2C,aAAaoB,OAAQD,IAE1C,GADAE,QAAQC,IAAIjE,EAAM2C,aAAamB,GAAGvD,IAC/BP,EAAM2C,aAAamB,GAAGvD,KAAOA,EAAG,CAC/BsD,EAAQ7D,EAAM2C,aAAamB,GAAGvD,GAAK,EACnC,MAGRsC,EAAgB7C,EAAM2C,aAAakB,OAM/B,kBAAC,EAAD,CAAS7C,MAAM,0BAA0BC,eAAkBX,MC5DjEyB,EAAY,CAChB,CACExB,GAAI,EACJC,KAAM,YACNC,SAAU,UACVE,UAAW,cACXC,OAAQ,UACRM,IAAK,kHACLL,WAAY,YAEd,CACEN,GAAI,EACJC,KAAM,cACNC,SAAU,UACVE,UAAW,eACXC,OAAQ,UACRM,IAAK,wIACLL,WAAY,OAEd,CACEN,GAAI,EACJC,KAAM,cACNC,SAAU,WACVE,UAAW,cACXC,OAAQ,WACRM,IAAK,gHACLL,WAAY,YAEd,CACEN,GAAI,EACJC,KAAM,iBACNC,SAAU,WACVE,UAAW,eACXC,OAAQ,UACRM,IAAK,gHACLL,WAAY,OAEd,CACEN,GAAI,EACJC,KAAM,cACNC,SAAU,UACVE,UAAW,eACXC,OAAQ,UACRM,IAAK,kHACLL,WAAY,eAEd,CACEN,GAAI,EACJC,KAAM,aACNC,SAAU,aACVE,UAAW,eACXC,OAAQ,UACRM,IAAK,kHACLL,WAAY,SAEd,CACEN,GAAI,EACJC,KAAM,eACNC,SAAU,cACVE,UAAW,gBACXC,OAAQ,UACRM,IAAK,kHACLL,WAAY,UAYDqD,MARf,WACE,OACE,yBAAK9D,UAAU,OACb,kBAAC,EAAD,CAAeuC,aAAcZ,MC7DfoC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLpB,QAAQoB,MAAMA,EAAMC,c","file":"static/js/main.3fa12f63.chunk.js","sourcesContent":["import React from 'react';\r\nimport './style.css';\r\n\r\nconst EmployeeImg = (props) => {\r\n    let imageSrc ='';\r\n    props.src ? imageSrc = props.src : imageSrc = 'https://cdn.pixabay.com/photo/2016/08/08/09/17/avatar-1577909_960_720.png';\r\n    return (\r\n        <img alt = 'employee' className='employee-img' src={imageSrc}></img>\r\n    )\r\n}\r\n\r\nexport default EmployeeImg","import React from 'react';\r\nimport './styles.css';\r\n\r\nexport const ContentBoxRow1 = (props) => {\r\n    return(\r\n        <div className='row'>\r\n            <div className='info'>\r\n                <h2>Id:</h2>\r\n                <p>{props.employeeInfo.id}</p>\r\n            </div>\r\n            <div className='info'>\r\n                <h2>Name:</h2>\r\n                <p>{props.employeeInfo.name}</p>\r\n            </div>\r\n            <div className='info'>\r\n                <h2>Position:</h2>\r\n                <p>{props.employeeInfo.position}</p>\r\n            </div>\r\n            {/* <h2>Name</h2>\r\n            <h2>Position</h2> */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const ContentBoxRow2 = (props) => {\r\n    return (\r\n        <div className='row'>\r\n            <div className='info'>\r\n                <h2>Start Date:</h2>\r\n                <p>{props.employeeInfo.startDate}</p>\r\n            </div>\r\n            <div className='info'>\r\n                <h2>Salary:</h2>\r\n                <p>{props.employeeInfo.salary}</p>\r\n            </div>\r\n            <div className='info'>\r\n                <h2>Department:</h2>\r\n                <p>{props.employeeInfo.department}</p>\r\n            </div>\r\n            {/* <h2>Start Date</h2>\r\n            <h2>Salary</h2>\r\n            <h2>Department</h2> */}\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport './styles.css';\r\nimport {ContentBoxRow1, ContentBoxRow2 } from '../ContentBoxRows/ContentBoxRows';\r\n\r\n\r\nconst EmployeeContentBox = (props) => {\r\n    return (\r\n        <div className='content-box'>\r\n            <ContentBoxRow1 employeeInfo = {props.employeeInfo}></ContentBoxRow1>\r\n            <ContentBoxRow2 employeeInfo = {props.employeeInfo}></ContentBoxRow2>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EmployeeContentBox;","import React from 'react';\r\nimport './styles.css';\r\nimport EmployeeImg from '../EmployeeImg/EmployeeImg';\r\nimport EmployeeContentBox from '../EmployeeContentBox/EmployeeContentBox';\r\n\r\nconst Wrapper = (props) => {\r\n    return (\r\n        <div className ={props.class}>\r\n            <EmployeeContentBox employeeInfo = {props.singleEmployee}/>\r\n            <EmployeeImg src={props.singleEmployee.img}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Wrapper;","import React from 'react';\r\nimport './styles.css';\r\n\r\nconst FilterInput = (props) => {\r\n    return (\r\n        <input type='text' placeholder = {props.placeholder} className=\"filter-input\" onChange={props.handleChange}></input>\r\n    )\r\n}\r\n\r\nexport default FilterInput;","import React from 'react';\r\nimport './styles.css';\r\n\r\nconst EmployeeListItem = (props) => {\r\n    return (\r\n        <li data-id = {props.id} className = 'employee' key={props.id} onClick={props.handleClick}>\r\n            <p data-id = {props.id}>Name: {props.employee.name}</p>\r\n            <p data-id = {props.id}>Position: {props.employee.position}</p>\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default EmployeeListItem;","import React from 'react';\r\nimport './styles.css';\r\nimport EmployeeListItem from '../employeeListItem/EmployeeListItem';\r\n\r\nconst EmployeeList = (props) => {\r\n\r\n    return (\r\n        <ul className = 'employee-list'>\r\n            {props.employees.map(item => (\r\n                <EmployeeListItem id={item.id} employee={item} handleClick={props.handleClick}/>\r\n            ))}\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default EmployeeList;","import React from 'react';\r\nimport './styles.css';\r\nimport FilterInput from '../filterinput/FilterInput';\r\nimport EmployeeList from '../employeeList/EmloyeeList';\r\n\r\nconst FiltersWrapper = (props) => {\r\n    return (\r\n        <div className = 'filters-wrapper'>\r\n            <h4>Enter a name or position to filter employees</h4>\r\n            <FilterInput placeholder='Enter name' handleChange={props.handleName}/>\r\n            <FilterInput placeholder='Enter position' handleChange={props.handlePosition}/>\r\n            <EmployeeList employees={props.employees} handleClick={props.handleClick}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FiltersWrapper;","import React, { useState, useEffect } from 'react';\r\nimport './styles.css';\r\nimport Wrapper from '../Wrapper/Wrapper';\r\nimport FiltersWrapper from '../FiltersWrapper/FiltersWrapper';\r\n\r\nconst PageContainer = (props) => {\r\n    const [nameFilter, setNameFilter] = useState();\r\n    const [positionFilter, setPositionFilter] = useState();\r\n    const [employees, setEmployees] = useState([...props.employeesArr]);\r\n    const [employeeInfo, setEmployeeInfo] = useState({\r\n    id: '',\r\n    name: '',\r\n    position: '',\r\n    startDate: '',\r\n    salary: '',\r\n    img: '',\r\n    department: ''\r\n    });\r\n    \r\n\r\n    \r\n    useEffect(()=>{\r\n        if(nameFilter !== undefined && positionFilter !== undefined){\r\n            const nameRegex = new RegExp(nameFilter.toLowerCase());\r\n            const positionRegex = new RegExp(positionFilter.toLowerCase());\r\n            let firstFilter = props.employeesArr.filter(employee => {\r\n                return nameRegex.test(employee.name.toLowerCase());\r\n            })\r\n            let filteredEmployees = firstFilter.filter(employee => {\r\n                return positionRegex.test(employee.position.toLowerCase());\r\n            })\r\n            setEmployees(filteredEmployees);\r\n\r\n        } else if (nameFilter !== undefined) {\r\n            const nameRegex = new RegExp(nameFilter.toLowerCase());\r\n            let filteredEmployees = props.employeesArr.filter(employee => {\r\n                return nameRegex.test(employee.name.toLowerCase());\r\n            })\r\n            setEmployees(filteredEmployees);\r\n        }  else if (positionFilter !== undefined) {\r\n            const positionRegex = new RegExp(positionFilter.toLowerCase());\r\n            let filteredEmployees = props.employeesArr.filter(employee => {\r\n                return positionRegex.test(employee.position.toLowerCase());\r\n            })\r\n            setEmployees(filteredEmployees);\r\n        }\r\n    },[nameFilter, positionFilter])\r\n\r\n    const handleItemClick = (event) => {\r\n        const id = parseInt(event.target.getAttribute('data-id'));\r\n        let index = 0;\r\n        for(let i = 0; i < props.employeesArr.length; i++){\r\n            console.log(props.employeesArr[i].id);\r\n            if(props.employeesArr[i].id === id){\r\n                index = props.employeesArr[i].id - 1;\r\n                break;\r\n            }\r\n        }\r\n        setEmployeeInfo(props.employeesArr[index]);\r\n    }\r\n\r\n    return (\r\n        <div className='container'>\r\n            <FiltersWrapper employees ={employees} handleName={e => setNameFilter(e.target.value)} handlePosition={e => setPositionFilter(e.target.value)} handleClick={handleItemClick}/>\r\n            <Wrapper class='single-employee-wrapper' singleEmployee = {employeeInfo}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PageContainer;","import React from 'react';\nimport './App.css';\nimport PageContainer from './Components/pagecontainer/pagecontainer';\n\nconst employees = [\n  {\n    id: 1,\n    name: \"Becky Sue\",\n    position: 'Manager',\n    startDate: 'Dec 3, 2009',\n    salary: '$80,000',\n    img: 'https://images.pexels.com/photos/1181686/pexels-photo-1181686.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=750&w=1260',\n    department: 'Software'\n  },\n  {\n    id: 2,\n    name: 'Bill Franks',\n    position: 'Manager',\n    startDate: 'Jan 13, 2010',\n    salary: '$75,000',\n    img: 'https://images.unsplash.com/photo-1500648767791-00dcc994a43e?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=634&q=80',\n    department: 'Web'\n  },\n  {\n    id: 3, \n    name: 'Josh Mooris',\n    position: 'Engineer',\n    startDate: 'Dec 3, 2009',\n    salary: '$105,000',\n    img: 'https://images.pexels.com/photos/736716/pexels-photo-736716.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=750&w=1260',\n    department: 'Software'\n  },\n  {\n    id: 4,\n    name: 'Martha Jenkins',\n    position: 'Engineer',\n    startDate: 'Jan 13, 2010',\n    salary: '$85,000',\n    img: 'https://images.pexels.com/photos/774909/pexels-photo-774909.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=750&w=1260',\n    department: 'Web'\n  },\n  {\n    id: 5,\n    name: 'Frank Moses',\n    position: 'Janitor',\n    startDate: 'June 1, 2011',\n    salary: '$55,000',\n    img: 'https://images.pexels.com/photos/1300402/pexels-photo-1300402.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=750&w=1260',\n    department: 'Maintenance'\n  },\n  {\n    id: 6,\n    name: 'John Smith',\n    position: 'Sales Lead',\n    startDate: 'June 1, 2011',\n    salary: '$85,000',\n    img: 'https://images.pexels.com/photos/2379004/pexels-photo-2379004.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=750&w=1260',\n    department: 'Sales'\n  },\n  {\n    id: 7,\n    name: 'Whitney Klem',\n    position: 'Salesperson',\n    startDate: 'July 25, 2011',\n    salary: '$65,000',\n    img: 'https://images.pexels.com/photos/1036623/pexels-photo-1036623.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=750&w=1260',\n    department: 'Sales'\n  }\n]\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <PageContainer employeesArr={employees}/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}